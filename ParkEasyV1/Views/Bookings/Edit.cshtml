@model ParkEasyV1.Models.ViewModels.ViewBookingViewModel

@{
    ViewBag.Title = "View Booking";
}

<div class="container body-content">
    @if (ViewBag.Message != null)
    {
        <center>
            <div class="alert alert-secondary col-md-8 text-center font-weight-bold my-3" role="alert">
                @ViewBag.Message
            </div>
        </center>
    }

    @if (User.IsInRole("Customer"))
    {
        <h2 class="text-center" style="margin-top: 20px; margin-bottom: 30px;">My Booking</h2>
    }
    else
    {
        <h2 class="text-center" style="margin-top: 20px; margin-bottom: 30px;">Manage Booking</h2>
    }

    <h4 class="text-center" style="margin-top: 20px; margin-bottom: 30px;">Booking ID: #@Model.BookingID</h4>

    @using (Html.BeginForm("Edit", "Bookings", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.BookingID)
        @Html.HiddenFor(model=> model.DepartureDate)
        @Html.HiddenFor(model => model.DepartureTime)
        @Html.HiddenFor(model => model.ReturnDate)
        @Html.HiddenFor(model => model.ReturnTime)
        @Html.HiddenFor(model => model.Duration)
        @Html.HiddenFor(model => model.Total)
        @Html.HiddenFor(model => model.Valet)

        <div class="row" style="padding-bottom: 20px;">
            <div class="col-md-3">
                <div class="form-group">
                    @Html.LabelFor(model => model.DepartureDate, htmlAttributes: new { @class = "control-label col-md-8" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DepartureDate, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                        @Html.ValidationMessageFor(model => model.DepartureDate, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    @Html.LabelFor(model => model.DepartureTime, htmlAttributes: new { @class = "control-label col-md-8" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DepartureTime, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                        @Html.ValidationMessageFor(model => model.DepartureTime, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    @Html.LabelFor(model => model.ReturnDate, htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ReturnDate, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                        @Html.ValidationMessageFor(model => model.ReturnDate, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    @Html.LabelFor(model => model.ReturnTime, htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.ReturnTime, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                        @Html.ValidationMessageFor(model => model.ReturnTime, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Surname, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.AddressLine1, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.AddressLine1, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AddressLine1, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.AddressLine2, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.AddressLine2, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AddressLine2, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.City, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Postcode, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-4">
                        @Html.EditorFor(model => model.Postcode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Postcode, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PhoneNo, htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.PhoneNo, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PhoneNo, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-6">

                <div class="form-group">
                    @Html.LabelFor(model => model.VehicleMake, htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.VehicleMake, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.VehicleMake, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.VehicleModel, htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.VehicleModel, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.VehicleModel, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.VehicleColour, htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.VehicleColour, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.VehicleColour, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.VehicleRegistration, htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.VehicleRegistration, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.VehicleRegistration, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.NoOfPassengers, htmlAttributes: new { @class = "control-label col-md-10" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.NoOfPassengers, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.NoOfPassengers, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>

        <div class="row offset-1 my-3" style="padding-bottom: 30px;">
            <div class="col-md-3">
                <h6>Duration: @Model.Duration Days</h6>
            </div>
            <div class="col-md-3">
                @if (Model.Valet)
                {
                    <h6>Valet Service: <i class="fas fa-check text-success"></i></h6>
                }
                else
                {
                    <h6>Valet Service: <i class="fas fa-times text-danger"></i></h6>
                }
            </div>
            <div class="col-md-3">
                <h6>Status: @Model.Status</h6>
            </div>
            <div class="col-md-3"><h6>Total: £@Model.Total</h6></div>
        </div>

        <div class="row">
            <div class="col-md-12">
                @if (User.IsInRole("Customer"))
                {
                    <button class="btn btn-darkblue font-weight-bold m-3" type="button" onclick="location.href='@Url.Action("MyBookings", "Users")'">Back</button>
                }
                else
                {
                    <button class="btn btn-darkblue font-weight-bold m-3" type="button" onclick="location.href='@Url.Action("Manage", "Bookings")'">Back</button>
                }

                <input type="submit" class="btn btn-darkblue font-weight-bold m-3" value="Save" />
                <button class="btn btn-danger font-weight-bold m-3" type="button" onclick="location.href='@Url.Action("Cancel", "Bookings", new { id = Model.BookingID })'">Cancel</button>
            </div>
        </div>

    }
</div>
