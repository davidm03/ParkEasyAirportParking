@model ParkEasyV1.Models.ViewModels.AvailabilityViewModel

@{
    ViewBag.Title = "Check Availability";
}

<link href="~/Content/themes/base/jquery-ui.min.css" rel="stylesheet" />
<link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/timepicker/1.3.5/jquery.timepicker.min.css">
@section scripts{

    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
    <script src="//cdnjs.cloudflare.com/ajax/libs/timepicker/1.3.5/jquery.timepicker.min.js"></script>

    <script>
        $(function () {
            $("#DepartureDate").datepicker({
                dateFormat: "dd/mm/yy",
                changeMonth: true,
                changeYear: true,
                minDate: -0,
                maxDate: "+12M +0D",
            });
        });
    </script>
    <script>
        $(function () {
            $("#ReturnDate").datepicker({
                dateFormat: "dd/mm/yy",
                changeMonth: true,
                changeYear: true,
                minDate: -0,
                maxDate: "+12M +0D"

            });
        });
    </script>

    <script>
        $("#DepartureTime").timepicker({
            timeFormat: 'HH:mm',
            interval: 60,
            minTime: '00:00',
            maxTime: '23:00',
            startTime: '00:00',
            dynamic: false,
            dropdown: true,
            scrollbar: true
        });
    </script>

    <script>
        $("#ReturnTime").timepicker({
            timeFormat: 'HH:mm',
            interval: 60,
            minTime: '00:00',
            maxTime: '23:00',
            startTime: '00:00',
            dynamic: false,
            dropdown: true,
            scrollbar: true
        });
    </script>
}

<div class="container body-content" style="padding-bottom: 400px;">
    <h3 class="text-center my-3">Check Availability</h3>

    @using (Html.BeginForm("Availability", "Bookings", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
    {
        @Html.AntiForgeryToken()
        <div class="row my-4" style="padding-bottom: 20px;">

            <div class="col-md-3">
                <div class="form-group">
                    @Html.LabelFor(model => model.DepartureDate, htmlAttributes: new { @class = "control-label col-md-8" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.DepartureDate, new { @class = "form-control", @placeholder = "dd/mm/yyyy" })
                        @Html.ValidationMessageFor(model => model.DepartureDate, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    @Html.LabelFor(model => model.DepartureTime, htmlAttributes: new { @class = "control-label col-md-8" })
                    <div class="col-md-6">
                        @Html.TextBoxFor(model => model.DepartureTime, new { @class = "form-control" } )
                        @Html.ValidationMessageFor(model => model.DepartureTime, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    @Html.LabelFor(model => model.ReturnDate, htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-10">
                        @Html.TextBoxFor(model => model.ReturnDate, new { @class = "form-control", @placeholder = "dd/mm/yyyy" })
                        @Html.ValidationMessageFor(model => model.ReturnDate, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    @Html.LabelFor(model => model.ReturnTime, htmlAttributes: new { @class = "control-label col-md-6" })
                    <div class="col-md-6">
                        @Html.TextBoxFor(model => model.ReturnTime, new { @class = "form-control" } )
                        @Html.ValidationMessageFor(model => model.ReturnTime, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                <center>
                    <input type="submit" class="btn btn-darkblue font-weight-bold" value="Check Availability" />
                </center>
            </div>
        </div>
    }

    @if (TempData["Available"] != null)
    {


        <center>
            <div class="alert alert-success col-md-6 my-4" role="alert">
                <i class="far fa-calendar-check"></i> @TempData["Available"] <br>
                <h6 class="text-center">Total: £@ViewBag.Total</h6>
                <button class="btn btn-darkblue font-weight-bold my-2" type="button" onclick="location.href='@Url.Action("Create", "Bookings")'">Book Now</button>
            </div>
        </center>
    }
    else if (TempData["UnAvailable"] != null)
    {
        <center>
            <div class="alert alert-danger col-md-6 my-4" role="alert">
                <i class="far fa-calendar-times"></i> @TempData["UnAvailable"]
            </div>
        </center>
    }
</div>



